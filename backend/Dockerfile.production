# Dockerfile sécurisé pour la production - Backend Trading ETF
FROM python:3.11-slim-bullseye

# Métadonnées
LABEL maintainer="Trading ETF Team"
LABEL version="1.0.0"
LABEL description="Backend sécurisé pour l'application Trading ETF"

# Variables d'environnement de sécurité
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    ENVIRONMENT=production

# Créer un utilisateur non-root pour la sécurité
RUN groupadd -r appuser && useradd -r -g appuser appuser

# Installer les dépendances système nécessaires
RUN apt-get update && apt-get install -y \
    --no-install-recommends \
    gcc \
    libpq-dev \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get purge -y --auto-remove gcc

# Créer et configurer le répertoire de travail
WORKDIR /app

# Copier et installer les dépendances Python
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copier le code de l'application
COPY . .

# Créer les répertoires nécessaires avec bonnes permissions
RUN mkdir -p /app/logs /app/static /app/media && \
    chown -R appuser:appuser /app && \
    chmod -R 755 /app && \
    chmod 700 /app/logs

# Supprimer les fichiers sensibles qui ne doivent pas être en production
RUN rm -f .env .env.* \
    init_database_complete.py \
    create_test_*.py \
    add_sample_data.py \
    start_backend_simple.py \
    && find . -name "*.pyc" -delete \
    && find . -name "__pycache__" -exec rm -rf {} + 2>/dev/null || true

# Scanner de sécurité des dépendances (optionnel)
RUN pip install --no-cache-dir safety && \
    safety check --json || echo "Avertissement: Vulnérabilités détectées dans les dépendances" && \
    pip uninstall -y safety

# Passer à l'utilisateur non-root
USER appuser

# Port d'exposition (non privilégié)
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Script d'entrée sécurisé
COPY --chown=appuser:appuser docker-entrypoint-production.sh /app/
RUN chmod +x /app/docker-entrypoint-production.sh

ENTRYPOINT ["/app/docker-entrypoint-production.sh"]
CMD ["uvicorn", "app.main_production:app", "--host", "0.0.0.0", "--port", "8000", "--workers", "4", "--access-log"]